digraph "proxsuite::proxqp::sparse::Workspace&lt; T, I &gt;"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="LR";
  Node1 [label="proxsuite::proxqp::\lsparse::Workspace\< T, I \>",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip="This class defines the workspace of the sparse solver."];
  Node2 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" storage" ,fontname="Helvetica"];
  Node2 [label="proxsuite::linalg::\lveg::Vec\< proxsuite\l::linalg::veg::mem::byte \>",height=0.2,width=0.4,color="black",URL="$structproxsuite_1_1linalg_1_1veg_1_1_vec.html",tooltip=" "];
  Node3 -> Node2 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node3 [label="proxsuite::linalg::\lveg::_detail::_vector\l::adl::AdlBase",height=0.2,width=0.4,color="black",URL="$structproxsuite_1_1linalg_1_1veg_1_1__detail_1_1__vector_1_1adl_1_1_adl_base.html",tooltip=" "];
  Node4 -> Node2 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node4 [label="meta::if_t\< mem::CopyAvailable\lFor\<proxsuite::linalg::veg\l::mem::byte \>::value ==mem\l::CopyAvailable::no, _detail\l::NoCopy, _detail::Empty \>",height=0.2,width=0.4,color="black",tooltip=" "];
  Node5 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node5 [label="proxsuite::linalg::\lveg::_detail::_collections\l::VecImpl\< proxsuite::linalg\l::veg::mem::byte, mem::SystemAlloc,\l mem::DtorAvailableFor\< proxsuite\l::linalg::veg::mem::byte \>::value,\l mem::CopyAvailableFor\< proxsuite::\llinalg::veg::mem::byte \>::value \>",height=0.2,width=0.4,color="black",URL="$structproxsuite_1_1linalg_1_1veg_1_1__detail_1_1__collections_1_1_vec_impl.html",tooltip=" "];
  Node6 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" kkt_nnz_counts" ,fontname="Helvetica"];
  Node6 [label="proxsuite::linalg::\lveg::Vec\< I \>",height=0.2,width=0.4,color="black",URL="$structproxsuite_1_1linalg_1_1veg_1_1_vec.html",tooltip=" "];
  Node3 -> Node6 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node7 -> Node6 [dir="back",color="firebrick4",fontsize="10",style="solid",fontname="Helvetica"];
  Node7 [label="meta::if_t\< mem::CopyAvailable\lFor\<I \>::value ==mem::CopyAvailable\l::no, _detail::NoCopy, _detail::Empty \>",height=0.2,width=0.4,color="black",tooltip=" "];
  Node8 -> Node6 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node8 [label="proxsuite::linalg::\lveg::_detail::_collections\l::VecImpl\< I, mem::SystemAlloc,\l mem::DtorAvailableFor\< I \>\l::value, mem::CopyAvailableFor\l\< I \>::value \>",height=0.2,width=0.4,color="black",URL="$structproxsuite_1_1linalg_1_1veg_1_1__detail_1_1__collections_1_1_vec_impl.html",tooltip=" "];
  Node9 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" matrix_free_kkt" ,fontname="Helvetica"];
  Node9 [label="std::unique_ptr\< proxsuite\l::proxqp::sparse::detail\l::AugmentedKkt\< T, I \> \>",height=0.2,width=0.4,color="black",tooltip=" "];
  Node10 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" matrix_free_solver" ,fontname="Helvetica"];
  Node10 [label="std::unique_ptr\< Eigen\l::MINRES\< proxsuite::proxqp\l::sparse::detail::AugmentedKkt\l\< T, I \>, Eigen::Upper\|Eigen\l::Lower, Eigen::IdentityPreconditioner \> \>",height=0.2,width=0.4,color="black",tooltip=" "];
  Node11 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" lnnz" ,fontname="Helvetica"];
  Node11 [label="isize",height=0.2,width=0.4,color="black",tooltip=" "];
}
